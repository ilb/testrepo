name: Update Version on Merge

on:
  push:
    branches:
      - master

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Fetch tags
      run: git fetch --tags

    - name: List tags
      run: git tag -l

    - name: Get current date and release number
      id: get_version
      run: |
        DATE=$(date +%Y.%m.%d)
        RELEASE_NUMBER=$(git tag -l "$DATE.*" | wc -l)
        VERSION="$DATE.$((RELEASE_NUMBER + 1))"
        echo $DATE
        echo $VERSION
        echo $RELEASE_NUMBER
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Update package.json version
      run: |
        jq '.version = "${{ steps.get_version.outputs.version }}"' package.json > temp.json && mv temp.json package.json

    - name: Configure git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Commit changes
      run: |
        git add package.json
        git commit -m "Update version to ${{ steps.get_version.outputs.version }}"
        git push origin master

    - name: Create new tag
      run: |
        git tag ${{ steps.get_version.outputs.version }}
        git push origin ${{ steps.get_version.outputs.version }}

    - name: Generate release notes
      id: generate_release_notes
      run: |
        LAST_TAG=$(git describe --tags --abbrev=0)
        PR_NUMBERS=$(git log $LAST_TAG..HEAD --merges --pretty=format:"%s" | grep -oP '(?<=#)\d+')
        CHANGES=""
        for PR_NUMBER in $PR_NUMBERS; do
          PR_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)
          PR_TITLE=$(echo $PR_INFO | jq -r '.title')
          PR_BODY=$(echo $PR_INFO | jq -r '.body')
          CHANGES+="- [#$PR_NUMBER](${PR_INFO | jq -r '.html_url'}) - $PR_TITLE\n$PR_BODY\n\n"
        done
        echo "::set-output name=changes::$CHANGES"

    - name: Create new release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ### What's Changed
          ${{ steps.generate_release_notes.outputs.changes }}
        draft: false
        prerelease: false
